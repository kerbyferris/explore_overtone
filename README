# explore_overtone

Just exploring overtone and taking some notes.  Mainly for me to be
able to come back & figure this out if I ever get distracted by other
things.

## Usage

Use at your own risk.

## License

Copyright (C) 2012 Roger Allen.

Distributed under the Eclipse Public License, the same as Clojure.

But, I might change that once I figure out what I'm doing here.

# How I got here

Started at http://overtone.github.com/ and it pointed me to the wiki
for Documentation.  Starting there, it really wasn't obvious that I
didn't need to get Clojure and also the clone the overtone git
repository first.  Turns out, neither of those were necessary, but it
wasn't clear since instructions were scattered across several pages.
After the fact, I noticed that the main github overtone README.md
has what I needed to do:

1. get lein from http://github.com/technomancy/leiningen
   
    make executable & get on your path, then
    $ lein

2. use lein to get all the bits you need for the tutorial

    $ lein new explore_overtone
    $ cd explore_overtone
    $ lein deps

3. bring up the repl
    $ lein repl
    ...
    (System/exit 0)

4. but, I wasn't satisfied with that...need Emacs.  [Updated
   instructions are much easier thanks to Emacs 24.1]

   M-x list-packages 
   select & install clojure-mode  

   Have not tried the live-coding in emacs config...
   TODO https://github.com/overtone/live-coding-emacs.git

Startup in emacs

Option 1:
  $ cd .../explore_overtone
  $ lein swank

  In emacs
  ;; initially wasn't able to get this to work...
  ;; oh, see "connecting with slime" in the swank-clojure page, 
  M-x slime-connect
  (use 'overtone.live)
  ...
  (System/exit 0)

Option 2:
  In emacs
  go to explore_overtone dir in dired
  M-x clojure-jack-in
  (use 'overtone.live)
  ...
  (System/exit 0)

# Results so far...

* Monotron clone

  https://github.com/rogerallen/explore_overtone/blob/master/src/explore_overtone/monotron.clj

  Makes somewhat interesting electronic beeps and also can be
  controlled via TouchOSC iPad/Android App.

* Guitar
  
  https://github.com/rogerallen/explore_overtone/blob/master/src/explore_overtone/guitar.clj

  Strum chords.

* Ambient Piano via Pi

  https://github.com/rogerallen/explore_overtone/blob/master/src/explore_overtone/irrational_infinite_song.clj

  Further explorations on this theme are being developed here https://github.com/rogerallen/irso

* Drawing a random Maze & using it to create a composition.

  https://github.com/rogerallen/explore_overtone/blob/master/src/explore_overtone/maze.clj

  Maze code from "Clojure Programming" Chapter 3.

* Drawing sequences with Quil, playing them with Overtone

  https://github.com/rogerallen/explore_overtone/blob/master/src/explore_overtone/quil_display.clj

* A Variable-Rate Metronome
 
  Who would have thought that musical tempo involved calculus & differential equations?

  https://github.com/rogerallen/explore_overtone/blob/master/src/explore_overtone/my_rhythm.clj

# Questions & Answers

Q & A about the environment below.  For questions that can be answered
with code, see
https://github.com/rogerallen/explore_overtone/blob/master/src/explore_overtone/qna.clj

I'll write down questions as I think of them.  Answers as I get to them.

* where to understand the basics of Clojure?

  http://dev.clojure.org/display/doc/Getting+Started+for+Beginners

  Nice intro for me:
  http://moxleystratton.com/clojure/clojure-tutorial-for-the-non-lisp-programmer

  Looks like a nice, more detailed resource:
  http://java.ociweb.com/mark/clojure/article.html

  I've got the O'Reilly book "Programming Clojure" on the way...

  UPDATE: found a bug!  See https://github.com/clojurebook/ClojureProgramming/issues/7

* where to understand the basics of emacs+clojure/slime-mode?

  http://dev.clojure.org/display/doc/Getting+Started+with+Emacs
  http://www.cliki.net/SLIME%20Features

* how do I eval code from another buffer into the repl buffer?

  C-x C-e evaluates & prints out the results into the message area.
  Nothing happens in the repl buffer, but the evaluation does happen.

  C-c C-r aka M-x slime-eval-region for a whole region of code.

* how do I get a standalone SuperCollider for server mode?

  overtone.live is fine to start with, but eventually you'll want
  more/better ugens.

  download from http://supercollider.sourceforge.net/downloads/
  1) main app -- install normally
  2) extra plugins -- apparently on the mac it goes to...
     ~/Library/Application Support/SuperCollider/Extensions/

* how do I increase SuperCollider's memory allocation?

See https://groups.google.com/forum/?fromgroups#!topic/overtone/n0zzgY4Z2Vo

Jeff Rose suggests: it is running out of real-time allocated RAM.  (It
looks like the default amount of RAM is really low, only 8 megs or
so...)  Inside an SC window I ran this:

s.quit; 
s.options.memSize = 655360;  // e.g., could be different for you 
s.boot; 


* other resources to look at:

  Supercollider Links

  http://sccode.org/
  http://www.freesound.org/
  http://theremin.music.uiowa.edu/

  Abc4j?

  http://code.google.com/p/abc4j/ for display of notes?

  Impromptu?

  Found this http://impromptu.moso.com.au/tutorials.html 
  what's the difference?

  Haskell School of Music

  http://haskell.cs.yale.edu/?page_id=276

* how do I try the latest code?

  Just clone the github project & use lein...

  git clone git://github.com/overtone/overtone.git
  cd overtone
  lein deps
  lein repl

  (use 'overtone.live)
  (definst foo [] (saw 220))
  (foo)

  You can also fork the code & use that.  Follow github instructions
  on forking and setting your upstream properly.  Then

  git fetch upstream
  git merge upstream/master  

* how do I use the latest code in my own project?

  Leiningen 2 has a "checkouts" feature.  
  See https://github.com/technomancy/leiningen/blob/master/doc/FAQ.md

  Any time you make a change to the local overtone, like:
  cd ...local path to your.../overtone
  git fetch upstream
  git merge upstream/master  

  You need to update the jar file for use locally.
  lein clean
  lein deps
  lein install
    ...
    Created .../overtone/overtone/overtone-0.X.X-SNAPSHOT.jar
    (where 0.X.X is a placeholder for the latest version)

  To set this up, you need to create that checkouts directory
  cd .../explore_overtone/
  mkdir checkouts
  cd checkouts
  ln -s ...relative path to your.../overtone overtone
  cd ..
  edit project.clj to use the "0.X.X-SNAPSHOT" version

  Afterwards, just use lein normally.
  lein clean
  lein deps
  lein repl
